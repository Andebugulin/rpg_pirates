// <auto-generated />
using Game.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Game.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20241215154402_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Game.Database.CharacterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ammunition")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("KilledEnemies")
                        .HasColumnType("integer");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<int>("MagicPoints")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("integer");

                    b.Property<int>("MaxMagicPoints")
                        .HasColumnType("integer");

                    b.Property<int>("MaxStamina")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PositionX")
                        .HasColumnType("integer");

                    b.Property<int?>("PositionY")
                        .HasColumnType("integer");

                    b.Property<string>("QuestProgress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ShipId")
                        .HasColumnType("integer");

                    b.Property<int>("Stamina")
                        .HasColumnType("integer");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ShipId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Game.Database.EntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PositionX")
                        .HasColumnType("integer");

                    b.Property<int?>("PositionY")
                        .HasColumnType("integer");

                    b.Property<int?>("ShipId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ShipId");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("Game.Database.ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int?>("EquipmentSlot")
                        .HasColumnType("integer");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PositionX")
                        .HasColumnType("integer");

                    b.Property<int?>("PositionY")
                        .HasColumnType("integer");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer");

                    b.Property<int?>("ShipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ShipId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Game.Database.LocationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PositionX")
                        .HasColumnType("integer");

                    b.Property<int?>("PositionY")
                        .HasColumnType("integer");

                    b.Property<int>("Significance")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Game.Database.QuestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rewards")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("Game.Database.QuestObjectiveModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("QuestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.ToTable("QuestObjectives");
                });

            modelBuilder.Entity("Game.Database.ShipModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AttackPower")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PositionX")
                        .HasColumnType("integer");

                    b.Property<int?>("PositionY")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("Game.Database.CharacterModel", b =>
                {
                    b.HasOne("Game.Database.LocationModel", null)
                        .WithMany("People")
                        .HasForeignKey("LocationId");

                    b.HasOne("Game.Database.ShipModel", "Ship")
                        .WithMany("Crew")
                        .HasForeignKey("ShipId");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Game.Database.EntityModel", b =>
                {
                    b.HasOne("Game.Database.LocationModel", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Game.Database.ShipModel", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipId");

                    b.Navigation("Location");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Game.Database.ItemModel", b =>
                {
                    b.HasOne("Game.Database.CharacterModel", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId");

                    b.HasOne("Game.Database.LocationModel", "Location")
                        .WithMany("LocationItems")
                        .HasForeignKey("LocationId");

                    b.HasOne("Game.Database.ShipModel", "Ship")
                        .WithMany("ShipItems")
                        .HasForeignKey("ShipId");

                    b.Navigation("Character");

                    b.Navigation("Location");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Game.Database.QuestModel", b =>
                {
                    b.HasOne("Game.Database.CharacterModel", "Character")
                        .WithMany("ActiveQuests")
                        .HasForeignKey("CharacterId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Game.Database.QuestObjectiveModel", b =>
                {
                    b.HasOne("Game.Database.QuestModel", "Quest")
                        .WithMany("Objectives")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("Game.Database.CharacterModel", b =>
                {
                    b.Navigation("ActiveQuests");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Game.Database.LocationModel", b =>
                {
                    b.Navigation("LocationItems");

                    b.Navigation("People");
                });

            modelBuilder.Entity("Game.Database.QuestModel", b =>
                {
                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("Game.Database.ShipModel", b =>
                {
                    b.Navigation("Crew");

                    b.Navigation("ShipItems");
                });
#pragma warning restore 612, 618
        }
    }
}
